name: Deploy Angular App to GitHub Pages

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: PJM-frontend-app/package-lock.json

      - name: Install dependencies
        working-directory: ./PJM-frontend-app
        run: npm ci

      - name: Build Angular app (without SSR)
        working-directory: ./PJM-frontend-app
        run: |
          # Modifier temporairement angular.json pour d√©sactiver SSR
          npm run build -- --configuration production --base-href /PJMTool-app/
        continue-on-error: false

      - name: Copy index.html for 404
        working-directory: ./PJM-frontend-app
        run: |
          if [ -f "dist/pjm-frontend-app/browser/index.html" ]; then
            cp dist/pjm-frontend-app/browser/index.html dist/pjm-frontend-app/browser/404.html
          elif [ -f "dist/pjm-frontend-app/index.html" ]; then
            cp dist/pjm-frontend-app/index.html dist/pjm-frontend-app/404.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./PJM-frontend-app/dist/pjm-frontend-app/browser

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
